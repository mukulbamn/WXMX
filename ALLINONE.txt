Practical 1
	Solution of first order differential equations.
    
	    Written By Anshul Verma (19/78065) for GE-III Practicals
	    B.Sc.(Hons.) Computer Science
  1 Find the solution of first order differential equation
	dy/dx = 1+4y^2 and also
	solve the initial value problem 
	dy/dx = 1+4y^2, y(2)=2
 -->	eq: 'diff(y,x) = 1+4*y^2;
(%o1)	'diff(y,x,1)=4*y^2+1
 -->	ode2(eq,y,x);
(%o2)	atan(2*y)/2=x+%c
 -->	sol: ic1(%,x=0,y=0);
(%o3)	atan(2*y)/2=x
 -->	solve(sol, y);
(%o4)	[y=tan(2*x)/2]
  2 Solve the first order differential equation
	dy/dx = y*tan(x) and also 
	solve the initial value problem
	dy/dx = y*tan(x), y(0)=1/(2pi)
 -->	eq: 'diff(y,x) = y*tan(x)+x^2;
(%o5)	'diff(y,x,1)=tan(x)*y+x^2
 -->	ode2(eq,y,x);
(%o6)	y=sec(x)*((x^2-2)*sin(x)+2*x*cos(x)+%c)
 -->	sol: ic1(%,x=0,y=1/(2*%pi));
(%o7)	y=((2*%pi*x^2-4*%pi)*sec(x)*sin(x)+(4*%pi*x*cos(x)+1)*sec(x))/(2*%pi)
 -->	wxplot2d(rhs(sol),[x,-10,10]);
(%t8)	 (Graphics) 
(%o8)	
  3 Find the solution of first order differential equation
	dy/dx = y*tanhx and also
	solve the initial value problem
	dy/dx = y*tanhx, y(1)=1
 -->	eq: 'diff(y,x) = y*atan(x);
(%o9)	'diff(y,x,1)=atan(x)*y
 -->	ode2(eq,y,x);
(%o10)	y=%c*%e^(x*atan(x)-log(x^2+1)/2)
 -->	sol: ic1(%,x=1,y=1);
(%o11)	y=%e^(-log(x^2+1)/2+x*atan(x)+log(2)/2-%pi/4)
 -->	wxplot2d(rhs(sol),[x,-5,5],[y,-5,20]);
plot2d: some values were clipped.

(%t12)	 (Graphics) 
(%o12)	
  4 Find the solution of first order differential equation
	dy/dx = (pi*sin(pi*x)*cosh(3*y))/(3cos(pi*x)*sinh(3*y)) 
	and also solve the initial value problem
	dy/dx = (pi*sin(pi*x)*cosh(3*y))/(3cos(pi*x)*sinh(3*y)), y(1)=1
 -->	eq: 'diff(y,x) = (%pi*sin(%pi*x)*cosh(3*y))/(3*cos(%pi*x)*sinh(3*y));
(%o13)	'diff(y,x,1)=(%pi*sin(%pi*x)*cosh(3*y))/(3*cos(%pi*x)*sinh(3*y))
 -->	ode2(eq,y,x);
(%o14)	log(cosh(3*y))/%pi=%c-log(cos(%pi*x))/%pi
 -->	sol: ic1(%,x=1,y=1);
(%o15)	log(cosh(3*y))/%pi=-(log(cos(%pi*x))-log(cosh(3))-log(-1))/%pi
 -->	solve(sol,y);
solve: using arc-trig functions to get a solution.

Some solutions will be lost.

(%o16)	[y=acosh(-cosh(3)/cos(%pi*x))/3]
 -->	wxplot2d(acosh(-cosh(3)/cos(%pi*x))/3,[x,-10,10],[y,-5,20]);
plot2d: expression evaluates to non-numeric value somewhere in plotting range.

(%t17)	 (Graphics) 
(%o17)	
Practical 2
	Plotting of second order solution family of differential equation.
    Written By Anshul Verma (19/78065) for GE-III Practicals
	    B.Sc.(Hons.) Computer Science
  1 Find the solution of  
	y"-4*y'+40*y=0 
	by assigning different values to k1 and k2 and 
	plot the solution.
 -->	kill(all)$depends(y,x);
(%o1)	[y(x)]
 -->	eqn:diff(y,x,2)-4*diff(y,x)+40*y=0;
	sol:ode2(eqn,y,x);
	gr1:ev(sol,%k1=0,%k2=1);
	gr2:ev(sol,%k1=1,%k2=0);
	gr3:ev(sol,%k1=1,%k2=1);
	gr4:ev(sol,%k1=1,%k2=-1);
	gr5:ev(sol,%k1=-1,%k2=1);
	gr6:ev(sol,%k1=-1,%k2=-1);
	wxplot2d(
	    [rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6)],
	    [x,-1,1],[y,-10,10]);
(%o2)	'diff(y,x,2)-4*('diff(y,x,1))+40*y=0

(%o3)	y=%e^(2*x)*(%k1*sin(6*x)+%k2*cos(6*x))
(%o4)	y=%e^(2*x)*cos(6*x)
(%o5)	y=%e^(2*x)*sin(6*x)
(%o6)	y=%e^(2*x)*(sin(6*x)+cos(6*x))
(%o7)	y=%e^(2*x)*(sin(6*x)-cos(6*x))
(%o8)	y=%e^(2*x)*(cos(6*x)-sin(6*x))
(%o9)	y=%e^(2*x)*(-sin(6*x)-cos(6*x))
(%t10)	 (Graphics) 
(%o10)	
  2 Find the solution of  
	y"-9*pi*y'+6*y=0 
	with initial conditions y(0)=0,y'(0)=b an 
	plot the solution.
 -->	kill(all)$depends(y,x);
(%o1)	[y(x)]
 -->	eqn:diff(y,x,2)-9*%pi*diff(y,x)+6*y=0;
	sol:ode2(eqn,y,x);
	solx:ic2(sol,x=0,y=0,diff(y,x)=b);
(%o2)	'diff(y,x,2)-9*%pi*('diff(y,x,1))+6*y=0

(%o3)	y=%k1*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2)+%k2*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2)
(%o4)	y=(b*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)-(b*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)
 -->	gr1:ev(solx,b=-10);
	gr2:ev(solx,b=-7);
	gr3:ev(solx,b=-3);
	gr4:ev(solx,b=0);
	gr5:ev(solx,b=3);
	gr6:ev(solx,b=7);
	gr7:ev(solx,b=10);
(%o5)	y=(10*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)-(10*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)
(%o6)	y=(7*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)-(7*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)
(%o7)	y=(3*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)-(3*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)
(%o8)	y=0

(%o9)	y=(3*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)-(3*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)
(%o10)	y=(7*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)-(7*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)
(%o11)	y=(10*%e^(((sqrt(81*%pi^2-24)+9*%pi)*x)/2))/sqrt(81*%pi^2-24)-(10*%e^(((9*%pi-sqrt(81*%pi^2-24))*x)/2))/sqrt(81*%pi^2-24)
 -->	wxplot2d(
	    [rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6),rhs(7)],
	    [x,-0.5,0.2],[y,-10,10],
	    [legend,"1","2","3","4","5","6","7"]);
plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

(%t12)	 (Graphics) 
(%o12)	
  3 Find the solution of  
	10y"+50*y'-65*y=0 
	with initial conditions y(0)=b,y'(0)=1.5 and
	plot the solution.
 -->	kill(all)$depends(y,x);
(%o1)	[y(x)]
 -->	eqn:10*diff(y,x,2)+50*diff(y,x)-65*y=0;
	sol:ode2(eqn,y,x);
	solx:ic2(sol,x=0,y=b,diff(y,x)=1.5);
(%o2)	10*('diff(y,x,2))+50*('diff(y,x,1))-65*y=0

(%o3)	y=%k1*%e^(((sqrt(51)-5)*x)/2)+%k2*%e^(((-sqrt(51)-5)*x)/2)
rat: replaced 1.5 by 3/2 = 1.5

(%o4)	y=(((5*sqrt(51)+51)*b+3*sqrt(51))*%e^(((sqrt(51)-5)*x)/2))/102-(((5*sqrt(51)-51)*b+3*sqrt(51))*%e^(((-sqrt(51)-5)*x)/2))/102
 -->	gr1:ev(solx,b=-3);
	gr2:ev(solx,b=-2);
	gr3:ev(solx,b=-1);
	gr4:ev(solx,b=0);
	gr5:ev(solx,b=1);
	gr6:ev(solx,b=2);
	gr7:ev(solx,b=3);
(%o5)	y=((3*sqrt(51)-3*(5*sqrt(51)+51))*%e^(((sqrt(51)-5)*x)/2))/102-((3*sqrt(51)-3*(5*sqrt(51)-51))*%e^(((-sqrt(51)-5)*x)/2))/102
(%o6)	y=((3*sqrt(51)-2*(5*sqrt(51)+51))*%e^(((sqrt(51)-5)*x)/2))/102-((3*sqrt(51)-2*(5*sqrt(51)-51))*%e^(((-sqrt(51)-5)*x)/2))/102
(%o7)	y=((-2*sqrt(51)-51)*%e^(((sqrt(51)-5)*x)/2))/102-((51-2*sqrt(51))*%e^(((-sqrt(51)-5)*x)/2))/102
(%o8)	y=(sqrt(51)*%e^(((sqrt(51)-5)*x)/2))/34-(sqrt(51)*%e^(((-sqrt(51)-5)*x)/2))/34
(%o9)	y=((8*sqrt(51)+51)*%e^(((sqrt(51)-5)*x)/2))/102-((8*sqrt(51)-51)*%e^(((-sqrt(51)-5)*x)/2))/102
(%o10)	y=((2*(5*sqrt(51)+51)+3*sqrt(51))*%e^(((sqrt(51)-5)*x)/2))/102-((2*(5*sqrt(51)-51)+3*sqrt(51))*%e^(((-sqrt(51)-5)*x)/2))/102
(%o11)	y=((3*(5*sqrt(51)+51)+3*sqrt(51))*%e^(((sqrt(51)-5)*x)/2))/102-((3*(5*sqrt(51)-51)+3*sqrt(51))*%e^(((-sqrt(51)-5)*x)/2))/102
 -->	wxplot2d(
	    [rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6),rhs(7)],
	    [x,-2,5],[y,-10,10],
	    [legend,"1","2","3","4","5","6","7"]);
plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

(%t12)	 (Graphics) 
(%o12)	
  4 Find the solution of  
	x^2y"-x*y'-24*y=0 
	with initial conditions y(1)=b,y'(1)=-21 and
	plot the solution.
 -->	kill(all)$depends(y,x);
(%o1)	[y(x)]
 -->	eqn:x^2*diff(y,x,2)-x*diff(y,x)-24*y=0;
	sol:ode2(eqn,y,x);
	solx:ic2(sol,x=1,y=b,diff(y,x)=-21);
	gr1:ev(solx,b=-3);
	gr2:ev(solx,b=-2);
	gr3:ev(solx,b=-1);
	gr4:ev(solx,b=0);
	gr5:ev(solx,b=1);
	gr6:ev(solx,b=2);
	gr7:ev(solx,b=3);
	wxplot2d(
	    [rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6),rhs(7)],
	    [x,-2,2],[y,-20,40],
	    [legend,"1","2","3","4","5","6","7"]);
(%o2)	x^2*('diff(y,x,2))-x*('diff(y,x,1))-24*y=0

(%o3)	y=%k1*x^6+%k2/x^4
(%o4)	y=((4*b-21)*x^6)/10+(6*b+21)/(10*x^4)
(%o5)	y=3/(10*x^4)-(33*x^6)/10
(%o6)	y=9/(10*x^4)-(29*x^6)/10
(%o7)	y=3/(2*x^4)-(5*x^6)/2
(%o8)	y=21/(10*x^4)-(21*x^6)/10
(%o9)	y=27/(10*x^4)-(17*x^6)/10
(%o10)	y=33/(10*x^4)-(13*x^6)/10
(%o11)	y=39/(10*x^4)-(9*x^6)/10
plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

(%t12)	 (Graphics) 
(%o12)	
Practical 3
	Plot the family of solution of third order differential equation.
    
	    Written By Anshul Verma (19/78065) for GE-III Practicals
	    B.Sc. (Hons) Computer Science
  1 Find the solution of the third-order differential equation Y'''-Y''+100*y'-100*Y=0 with initial conditions y(0)=k3,y'(0)=k2,y"(0)=k1. Also, plot the solutions.
 -->	kill(all)$
	eqn:diff(y(x),x,3)-diff(y(x),x,2)+100*diff(y(x),x)-100*y(x)=0;
	atvalue(diff(y(x),x,2),x=0,%k1);
	atvalue(diff(y(x),x),x=0,%k2);
	atvalue(y(x),x=0,%k3);
	sol:desolve(eqn,y(x));
(%o1)	'diff(y(x),x,3)-'diff(y(x),x,2)+100*('diff(y(x),x,1))-100*y(x)=0

(%o2)	%k1

(%o3)	%k2

(%o4)	%k3

(%o5)	y(x)=-((100*%k3-101*%k2+%k1)*sin(10*x))/1010+((%k3-%k1)*cos(10*x))/101+((100*%k3+%k1)*%e^x)/101
 -->	gr1:ev(sol,%k1=5,%k2=0,%k3=0);
	gr2:ev(sol,%k1=0,%k2=5,%k3=0);
	gr3:ev(sol,%k1=0,%k2=0,%k3=5);
	gr4:ev(sol,%k1=5,%k2=5,%k3=5);
	wxplot2d([rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4)],[x,-5,4],[y,-1,4]);
(%o6)	y(x)=-sin(10*x)/202-(5*cos(10*x))/101+(5*%e^x)/101
(%o7)	y(x)=sin(10*x)/2
(%o8)	y(x)=-(50*sin(10*x))/101+(5*cos(10*x))/101+(500*%e^x)/101
(%o9)	y(x)=5*%e^x
plot2d: some values were clipped.

plot2d: some values were clipped.

(%t10)	 (Graphics) 
(%o10)	
  2 Find the solution of the third-order differential equation Y'''+3.2*Y''+4.81*y'=0 with initial conditions y(0)=a,y'(0)=-4.6,y"(0)=9.91. Also, plot the solutions.
 -->	kill(all)$
	eq:4*'diff(y(x),x,3)+3.2*'diff(y(x),x,2)+4.81*'diff(y(x),x)=0;
	sol:desolve(eq,y(x));
	solx:ev(sol,at(diff(y(x),x,2),x=0)=-9.91,at(diff(y(x),x),x=0)=-4.6,y(0)=a);
(%o1)	4*('diff(y(x),x,3))+3.2*('diff(y(x),x,2))+4.81*('diff(y(x),x,1))=0

rat: replaced 4.81 by 481/100 = 4.81

rat: replaced 3.2 by 16/5 = 3.2

rat: replaced 4.81 by 481/100 = 4.81

rat: replaced 3.2 by 16/5 = 3.2

rat: replaced 4.81 by 481/100 = 4.81

rat: replaced 3.2 by 16/5 = 3.2

(%o2)	y(x)=(%e^(-(2*x)/5)*((sin((sqrt(417)*x)/20)*((320*(160000*(at('diff(y(x),x,2),x=0))+128000*(at('diff(y(x),x,1),x=0))))/481-(800*(128000*(at('diff(y(x),x,2),x=0))-90000*(at('diff(y(x),x,1),x=0))))/481))/(40*sqrt(417))-
(cos((sqrt(417)*x)/20)*(160000*(at('diff(y(x),x,2),x=0))+128000*(at('diff(y(x),x,1),x=0))))/481))/400+(400*(at('diff(y(x),x,2),x=0))+320*(at('diff(y(x),x,1),x=0))+481*y(0))/481
(%o3)	y(x)=(%e^(-(2*x)/5)*(4520.582120582121*cos((sqrt(417)*x)/20)-(635.3430353430333*sin((sqrt(417)*x)/20))/sqrt(417)))/400+(481*a-5436.0)/481
 -->	gr1:ev(solx,a=-3.4)$
	gr2:ev(solx,a=-2)$
	gr3:ev(solx,a=-1);
	gr4:ev(solx,a=0);
	gr5:ev(solx,a=2);
	gr6:ev(solx,a=3.4);
	wxplot2d([rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6)],
	[x,-2,10],[y,-20,5],[legend,"1","2","3","4","5","6"]);
(%o6)	y(x)=(%e^(-(2*x)/5)*(4520.582120582121*cos((sqrt(417)*x)/20)-(635.3430353430333*sin((sqrt(417)*x)/20))/sqrt(417)))/400-12.3014553014553

(%o7)	y(x)=(%e^(-(2*x)/5)*(4520.582120582121*cos((sqrt(417)*x)/20)-(635.3430353430333*sin((sqrt(417)*x)/20))/sqrt(417)))/400-11.3014553014553

(%o8)	y(x)=(%e^(-(2*x)/5)*(4520.582120582121*cos((sqrt(417)*x)/20)-(635.3430353430333*sin((sqrt(417)*x)/20))/sqrt(417)))/400-9.301455301455303

(%o9)	y(x)=(%e^(-(2*x)/5)*(4520.582120582121*cos((sqrt(417)*x)/20)-(635.3430353430333*sin((sqrt(417)*x)/20))/sqrt(417)))/400-7.901455301455303

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

(%t10)	 (Graphics) 
(%o10)	
  3 Find the solution of the third-order differential equation Y'''+7.5*Y''+14.25*y'-9.125*Y=0 with initial conditions y(0)=a,y'(0)=-54.97,y"(0)=257.51. Also, plot the solutions.
 -->	kill(all)$
	eq:'diff(y(x),x,3)+7.5*'diff(y(x),x,2)+14.25*'diff(y(x),x)-9.125*y(x)=0;
	sol:desolve(eq,y(x));
	solx:ev(sol,at(diff(y(x),x,2),x=0)=257.51,at(diff(y(x),x),x=0)=-54.97,y(0)=a);
(%o1)	'diff(y(x),x,3)+7.5*('diff(y(x),x,2))+14.25*('diff(y(x),x,1))-9.125*y(x)=0

rat: replaced -9.125 by -73/8 = -9.125

rat: replaced 14.25 by 57/4 = 14.25

rat: replaced 7.5 by 15/2 = 7.5

rat: replaced -9.125 by -73/8 = -9.125

rat: replaced 14.25 by 57/4 = 14.25

rat: replaced 7.5 by 15/2 = 7.5

rat: replaced -9.125 by -73/8 = -9.125

rat: replaced 14.25 by 57/4 = 14.25

rat: replaced 7.5 by 15/2 = 7.5

(%o2)	y(x)=(%e^(-4*x)*((sin((3*x)/2)*((32*(8*(at('diff(y(x),x,2),x=0))+64*(at('diff(y(x),x,1),x=0))-34*y(0)))/45-(8*(68*(at('diff(y(x),x,2),x=0))+364*(at('diff(y(x),x,1),x=0))-199*y(0)))/45))/12-
(cos((3*x)/2)*(8*(at('diff(y(x),x,2),x=0))+64*(at('diff(y(x),x,1),x=0))-34*y(0)))/45))/4+(%e^(x/2)*(4*(at('diff(y(x),x,2),x=0))+32*(at('diff(y(x),x,1),x=0))+73*y(0)))/90
(%o3)	y(x)=(%e^(-4*x)*((((32*(-34*a-1458.0))/45-(8*(-199*a-2498.399999999998))/45)*sin((3*x)/2))/12-((-34*a-1458.0)*cos((3*x)/2))/45))/4+((73*a-729.0)*%e^(x/2))/90
 -->	gr1:ev(solx,a=-10.5);
	gr2:ev(solx,a=-5.25);
	gr3:ev(solx,a=-1.5);
	gr4:ev(solx,a=0);
	gr5:ev(solx,a=5.25);
	gr6:ev(solx,a=10.05);
	wxplot2d([rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6)],
	[x,-0.5,3],[y,-15,15],[legend,"1","2","3","4","5","6"]);
(%o4)	y(x)=(%e^(-4*x)*(24.46666666666667*cos((3*x)/2)-59.1866666666667*sin((3*x)/2)))/4-16.61666666666666*%e^(x/2)
(%o5)	y(x)=(%e^(-4*x)*(28.43333333333333*cos((3*x)/2)-54.2866666666667*sin((3*x)/2)))/4-12.35833333333333*%e^(x/2)
(%o6)	y(x)=(%e^(-4*x)*(31.26666666666667*cos((3*x)/2)-50.7866666666667*sin((3*x)/2)))/4-9.316666666666667*%e^(x/2)
(%o7)	y(x)=(%e^(-4*x)*(32.4*cos((3*x)/2)-49.38666666666669*sin((3*x)/2)))/4-8.1*%e^(x/2)
(%o8)	y(x)=(%e^(-4*x)*(36.36666666666667*cos((3*x)/2)-44.48666666666669*sin((3*x)/2)))/4-3.841666666666667*%e^(x/2)
(%o9)	y(x)=(%e^(-4*x)*(39.99333333333334*cos((3*x)/2)-40.00666666666672*sin((3*x)/2)))/4+0.05166666666666768*%e^(x/2)
plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

(%t10)	 (Graphics) 
(%o10)	
  4 Find the solution of the third-order differential equation 0.45*Y'''-0.165*Y''+0.0045*y'-0.00175*Y=0 with initial conditions y(0)=a,y'(0)=-2.82,y"(0)=2.0485. Also, plot the solutions.
 -->	kill(all)$
	eq:0.45*'diff(y(x),x,3)+0.165*'diff(y(x),x,2)+0.0045*'diff(y(x),x)-0.00175*y(x)=0;
	sol:desolve(eq,y(x));
	solx:ev(sol,at(diff(y(x),x,2),x=0)=2.0485,at(diff(y(x),x),x=0)=-2.82,y(0)=a);
	gr1:ev(solx,a=-17.4);
	gr2:ev(solx,a=-10.25);
	gr3:ev(solx,a=-6.54);
	gr4:ev(solx,a=0);
	gr5:ev(solx,a=10.25);
	gr6:ev(solx,a=17.4);
	wxplot2d([rhs(gr1),rhs(gr2),rhs(gr3),rhs(gr4),rhs(gr5),rhs(gr6)],
	[x,-5,20],[y,-20,15],[legend,"1","2","3","4","5","6"]);
(%o1)	0.45*('diff(y(x),x,3))+0.165*('diff(y(x),x,2))+0.0045*('diff(y(x),x,1))-0.00175*y(x)=0

rat: replaced -0.00175 by -7/4000 = -0.00175

rat: replaced 0.0045 by 9/2000 = 0.0045

rat: replaced 0.165 by 33/200 = 0.165

rat: replaced 0.45 by 9/20 = 0.45

rat: replaced -0.00175 by -7/4000 = -0.00175

rat: replaced 0.0045 by 9/2000 = 0.0045

rat: replaced 0.165 by 33/200 = 0.165

rat: replaced 0.45 by 9/20 = 0.45

rat: replaced -0.00175 by -7/4000 = -0.00175

rat: replaced 0.0045 by 9/2000 = 0.0045

rat: replaced 0.165 by 33/200 = 0.165

rat: replaced 0.45 by 9/20 = 0.45

(%o2)	y(x)=(%e^(-x/10)*((sinh(x/sqrt(30))*((600*(4500*(at('diff(y(x),x,2),x=0))+4800*(at('diff(y(x),x,1),x=0))+675*y(0)))/13-(60*(135000*(at('diff(y(x),x,2),x=0))+27000*(at('diff(y(x),x,1),x=0))+750*y(0)))/13))/(20*sqrt(30))+
(cosh(x/sqrt(30))*(135000*(at('diff(y(x),x,2),x=0))+27000*(at('diff(y(x),x,1),x=0))+750*y(0)))/13))/300-(%e^(-x/6)*(2700*(at('diff(y(x),x,2),x=0))+540*(at('diff(y(x),x,1),x=0))-63*y(0)))/78
(%o3)	y(x)=(%e^(-x/10)*((((600*(675*a-4317.749999999998))/13-(60*(750*a+200407.5))/13)*sinh(x/sqrt(30)))/(20*sqrt(30))+((750*a+200407.5)*cosh(x/sqrt(30)))/13))/300-((4008.15-63*a)*%e^(-x/6))/78
(%o4)	y(x)=(%e^(-x/10)*(14412.11538461538*cosh(x/sqrt(30))-(80304.23076923075*sinh(x/sqrt(30)))/sqrt(30)))/300-65.44038461538462*%e^(-x/6)
(%o5)	y(x)=(%e^(-x/10)*(14824.61538461538*cosh(x/sqrt(30))-(70404.23076923077*sinh(x/sqrt(30)))/sqrt(30)))/300-59.66538461538462*%e^(-x/6)
(%o6)	y(x)=(%e^(-x/10)*(15038.65384615384*cosh(x/sqrt(30))-(65267.30769230768*sinh(x/sqrt(30)))/sqrt(30)))/300-56.66884615384615*%e^(-x/6)
(%o7)	y(x)=(%e^(-x/10)*(15415.96153846153*cosh(x/sqrt(30))-(56211.92307692308*sinh(x/sqrt(30)))/sqrt(30)))/300-51.38653846153846*%e^(-x/6)
(%o8)	y(x)=(%e^(-x/10)*(16007.30769230769*cosh(x/sqrt(30))-(42019.61538461537*sinh(x/sqrt(30)))/sqrt(30)))/300-43.10769230769231*%e^(-x/6)
(%o9)	y(x)=(%e^(-x/10)*(16419.80769230769*cosh(x/sqrt(30))-(32119.61538461539*sinh(x/sqrt(30)))/sqrt(30)))/300-37.33269230769231*%e^(-x/6)
plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: all values were clipped.

(%t10)	 (Graphics) 
(%o10)	
Practical 4
	Solution of differential equation by variation of parameter method.
    
	    Written By Anshul Verma (19/78065) for GE-III Practicals
	    B.Sc. (Hons) Computer Science
  1 Solve the diferential equation y''+4y'+4y=e^(-2x)*sin(x) using variation of parameter.
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)+4*diff(y,x)+4*y=0;
	y:ode2(eq,y,x);
	yc:second(y);
	a:second(first(second(y)));
	b:second(second(second(y)));
	m:matrix([a,b],[diff(a,x),diff(b,x)]);
	W:determinant(m);
	yp:-a*integrate((b*(%e^(-2*x)*sin(x)))/W,x)+b*integrate((a*(%e^(-2*x)*sin(x)))/W,x);
	soll:yc+yp;
(%o2)	'diff(y,x,2)+4*('diff(y,x,1))+4*y=0

(%o3)	y=(%k2*x+%k1)*%e^(-2*x)
(%o4)	(%k2*x+%k1)*%e^(-2*x)
(%o5)	%k1

(%o6)	-2*x

(%o7)	matrix(
		[%k1,	-2*x],
		[0,	-2]
	)
(%o8)	-2*%k1

(%o9)	(%e^(-2*x)*((10*x+3)*sin(x)+(5*x+4)*cos(x)))/25+(x*%e^(-2*x)*(-2*sin(x)-cos(x)))/5
(%o10)	(%e^(-2*x)*((10*x+3)*sin(x)+(5*x+4)*cos(x)))/25+(x*%e^(-2*x)*(-2*sin(x)-cos(x)))/5+(%k2*x+%k1)*%e^(-2*x)
 -->	trigsimp(yp);
(%o11)	(%e^(-2*x)*(3*sin(x)+4*cos(x)))/25
  1.1 Verification by Another method
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)+4*diff(y,x)+4*y=%e^(-2*x)*sin(x);
	sol:ode2(eq,y,x);
(%o2)	'diff(y,x,2)+4*('diff(y,x,1))+4*y=%e^(-2*x)*sin(x)
(%o3)	y=(%k2*x+%k1)*%e^(-2*x)-%e^(-2*x)*sin(x)
  2 Solve the diferential equation y''-16y=19.2*e^(4x)+60*e^x using variation of parameter.
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)-16*y=0;
	y:ode2(eq,y,x);
	yc:second(y);
	a:second(first(second(y)));
	b:second(second(second(y)));
	m:matrix([a,b],[diff(a,x),diff(b,x)]);
	W:determinant(m);
	yp:-a*integrate((b*(19.2*%e^(4*x)+60*%e^x))/W,x)+b*integrate((a*(19.2*%e^(4*x)+60*%e^x))/W,x);
	soll:yc+yp;
(%o2)	'diff(y,x,2)-16*y=0

(%o3)	y=%k1*%e^(4*x)+%k2*%e^(-4*x)
(%o4)	%k1*%e^(4*x)+%k2*%e^(-4*x)
(%o5)	%e^(4*x)
(%o6)	%e^(-4*x)
(%o7)	matrix(
		[%e^(4*x),	%e^(-4*x)],
		[4*%e^(4*x),	-4*%e^(-4*x)]
	)
(%o8)	-8

(%o9)	((19.2*x-20*%e^(-3*x))*%e^(4*x))/8-(%e^(-4*x)*(2.4*%e^(8*x)+12*%e^(5*x)))/8
(%o10)	-(%e^(-4*x)*(2.4*%e^(8*x)+12*%e^(5*x)))/8+((19.2*x-20*%e^(-3*x))*%e^(4*x))/8+%k1*%e^(4*x)+%k2*%e^(-4*x)
 -->	trigsimp(yp);
rat: replaced 19.2 by 96/5 = 19.2

rat: replaced 2.4 by 12/5 = 2.4

(%o11)	((24*x-3)*%e^(4*x)-40*%e^x)/10
  2.1 Verification by Another method
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)-16*y=19.2*%e^(4*x)+60*%e^x;
	sol:ode2(eq,y,x);
(%o2)	'diff(y,x,2)-16*y=19.2*%e^(4*x)+60*%e^x
rat: replaced -19.2 by -96/5 = -19.2

(%o3)	y=((24*x-3)*%e^(4*x)-40*%e^x)/10+%k1*%e^(4*x)+%k2*%e^(-4*x)
  3 Solve the diferential equation y''+9y=cos(x)+1/3*cos(3*x) using variation of parameter.
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)+9*y=0;
	y:ode2(eq,y,x);
	yc:second(y);
	a:second(first(second(y)));
	b:second(second(second(y)));
	m:matrix([a,b],[diff(a,x),diff(b,x)]);
	W:determinant(m);
	yp:-a*integrate((b*(cos(x)+1/3*cos(3*x)))/W,x)+b*integrate((a*(cos(x)+1/3*cos(3*x)))/W,x);
	soll:yc+yp;
(%o2)	'diff(y,x,2)+9*y=0

(%o3)	y=%k1*sin(3*x)+%k2*cos(3*x)
(%o4)	%k1*sin(3*x)+%k2*cos(3*x)
(%o5)	sin(3*x)
(%o6)	cos(3*x)
(%o7)	matrix(
		[sin(3*x),	cos(3*x)],
		[3*cos(3*x),	-3*sin(3*x)]
	)
(%o8)	-3*sin(3*x)^2-3*cos(3*x)^2
(%o9)	cos(3*x)*((cos(4*x)+2*cos(2*x))/24-sin(3*x)^2/54)-sin(3*x)*((-tan(3*x)/(18*tan(3*x)^2+18)-x/6)/3-(sin(4*x)+2*sin(2*x))/24)
(%o10)	-sin(3*x)*((-tan(3*x)/(18*tan(3*x)^2+18)-x/6)/3-(sin(4*x)+2*sin(2*x))/24)+cos(3*x)*((cos(4*x)+2*cos(2*x))/24-sin(3*x)^2/54)+%k1*sin(3*x)+%k2*cos(3*x)
 -->	trigsimp(yp);
(%o11)	(3*sin(3*x)*sin(4*x)+3*cos(3*x)*cos(4*x)+(6*sin(2*x)+4*x)*sin(3*x)+6*cos(2*x)*cos(3*x))/72
  3.1 Verification by Another method
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)+9*y=cos(x)+1/3*cos(3*x);
	sol:ode2(eq,y,x);
(%o2)	'diff(y,x,2)+9*y=cos(3*x)/3+cos(x)
(%o3)	y=(12*x*sin(3*x)+4*cos(3*x)+27*cos(x))/216+%k1*sin(3*x)+%k2*cos(3*x)
  4 Solve the diferential equation y''+4y'-6.25y=3.125*(x^2+1) using variation of parameter.
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)+4*diff(y,x)-6.25*y=0;
	y:ode2(eq,y,x);
	yc:second(y);
	a:second(first(second(y)));
	b:second(second(second(y)));
	m:matrix([a,b],[diff(a,x),diff(b,x)]);
	W:determinant(m);
	yp:-a*integrate((b*(3.125*(x^2+1)))/W,x)+b*integrate((a*(3.125*(x^2+1)))/W,x);
	soll:yc+yp;
(%o2)	'diff(y,x,2)+4*('diff(y,x,1))-6.25*y=0

rat: replaced -6.25 by -25/4 = -6.25

(%o3)	y=%k1*%e^(((sqrt(41)-4)*x)/2)+%k2*%e^(((-sqrt(41)-4)*x)/2)
(%o4)	%k1*%e^(((sqrt(41)-4)*x)/2)+%k2*%e^(((-sqrt(41)-4)*x)/2)
(%o5)	%e^(((sqrt(41)-4)*x)/2)
(%o6)	%e^(((-sqrt(41)-4)*x)/2)
(%o7)	matrix(
		[%e^(((sqrt(41)-4)*x)/2),	%e^(((-sqrt(41)-4)*x)/2)],
		[((sqrt(41)-4)*%e^(((sqrt(41)-4)*x)/2))/2,	((-sqrt(41)-4)*%e^(((-sqrt(41)-4)*x)/2))/2]
	)
(%o8)	((-sqrt(41)-4)*%e^(((sqrt(41)-4)*x)/2+((-sqrt(41)-4)*x)/2))/2-((sqrt(41)-4)*%e^(((sqrt(41)-4)*x)/2+((-sqrt(41)-4)*x)/2))/2
(%o9)	3.125*%e^(((-sqrt(41)-4)*x)/2)*(-(((197936*sqrt(41)+1267794)*x^2+(-76168*sqrt(41)-487072)*x+14592*sqrt(41)+93968)*%e^((sqrt(41)*x)/2+2*x))/(sqrt(41)*(1029769*sqrt(41)+6593276))-%e^((sqrt(41)*x)/2+2*x)/(sqrt(41)*(sqrt(41)/2+2)))-3.125*%e^(((sqrt(41)-4)*x)/2)*
(-(((197936*sqrt(41)-1267794)*x^2+(487072-76168*sqrt(41))*x+14592*sqrt(41)-93968)*%e^(2*x-(sqrt(41)*x)/2))/(sqrt(41)*(1029769*sqrt(41)-6593276))-%e^(2*x-(sqrt(41)*x)/2)/(sqrt(41)*(2-sqrt(41)/2)))
(%o10)	3.125*%e^(((-sqrt(41)-4)*x)/2)*(-(((197936*sqrt(41)+1267794)*x^2+(-76168*sqrt(41)-487072)*x+14592*sqrt(41)+93968)*%e^((sqrt(41)*x)/2+2*x))/(sqrt(41)*(1029769*sqrt(41)+6593276))-%e^((sqrt(41)*x)/2+2*x)/(sqrt(41)*(sqrt(41)/2+2)))-3.125*%e^(((sqrt(41)-4)*x)/2)*
(-(((197936*sqrt(41)-1267794)*x^2+(487072-76168*sqrt(41))*x+14592*sqrt(41)-93968)*%e^(2*x-(sqrt(41)*x)/2))/(sqrt(41)*(1029769*sqrt(41)-6593276))-%e^(2*x-(sqrt(41)*x)/2)/(sqrt(41)*(2-sqrt(41)/2)))+%k1*%e^(((sqrt(41)-4)*x)/2)+%k2*%e^(((-sqrt(41)-4)*x)/2)
 -->	trigsimp(yp);
rat: replaced -3.125 by -25/8 = -3.125

rat: replaced 3.125 by 25/8 = 3.125

(%o11)	-(625*x^2+800*x+1337)/1250
  4.1 Verification by Another method
 -->	kill(all)$depends(y,x)$
	eq:diff(y,x,2)+4*diff(y,x)-6.25*y=3.125*(x^2+1);
	sol:ode2(eq,y,x);
(%o2)	'diff(y,x,2)+4*('diff(y,x,1))-6.25*y=3.125*(x^2+1)
rat: replaced -3.125 by -25/8 = -3.125

rat: replaced -6.25 by -25/4 = -6.25

(%o3)	y=%k1*%e^(((sqrt(41)-4)*x)/2)+%k2*%e^(((-sqrt(41)-4)*x)/2)-(625*x^2+800*x+1337)/1250
Practical 5
	Solution of system of First Order Ordinary Differential Equations
    Written By Anshul Verma (19/78065)
	    B.Sc. (Hons.) Computer Science
  1 Case 1: Real and Distinct Roots
  1.1 Solve the following system of ordinary differential equations
	x'=9x + 13.5y
	y'=1.5x + 9y
 -->	kill(all)$
 -->	eq1:'diff(x(t),t,1)=9*x(t) + 13.5*y(t);
	eq2:'diff(y(t),t,1)=1.5*x(t) + 9*y(t);
(%o1)	'diff(x(t),t,1)=13.5*y(t)+9*x(t)
(%o2)	'diff(y(t),t,1)=9*y(t)+1.5*x(t)
  1.1.1 Method 1 - Coeficient matrix
 -->	A:matrix([9,13.5],[1.5,9]);
(%o3)	matrix(
		[9,	13.5],
		[1.5,	9]
	)
 -->	/*Eigenvalues and Eigenvectors*/
	eigenvalues(A);
	eigenvectors(A);
rat: replaced -20.25 by -81/4 = -20.25

(%o4)	[[27/2,9/2],[1,1]]

rat: replaced -20.25 by -81/4 = -20.25

(%o5)	[[[27/2,9/2],[1,1]],[[[1,1/3]],[[1,-1/3]]]]
 -->	/*The general solution for the case of real and distinct eigenvalues is
	X = c1*K1*e^(r1*t) + c2*K2*e^(r2*t) 
	where r1 and r2 are eigenvalues and K1 and K2 are the eigenvectors*/
	soln:[x,y]=c1*[1,1/3]*e^(27/2*t) + c2*[1,-1/3]*e^(9/2*t);
(%o6)	[x,y]=[c1*e^((27*t)/2)+c2*e^((9*t)/2),(c1*e^((27*t)/2))/3-(c2*e^((9*t)/2))/3]
 -->	/*First numeric number denotes LHS(1) OR RHS(2) and second entry denotes the postion of element in the list*/
	part(soln,1,1)=part(soln,2,1);
	part(soln,1,2)=part(soln,2,2);
(%o7)	x=c1*e^((27*t)/2)+c2*e^((9*t)/2)
(%o8)	y=(c1*e^((27*t)/2))/3-(c2*e^((9*t)/2))/3
  1.1.2 Method 2 - Solving directly using desolve
 -->	desolve([eq1,eq2],[x(t),y(t)]);
rat: replaced 13.5 by 27/2 = 13.5

rat: replaced 13.5 by 27/2 = 13.5

rat: replaced 1.5 by 3/2 = 1.5

rat: replaced 1.5 by 3/2 = 1.5

rat: replaced -13.5 by -27/2 = -13.5

rat: replaced -1.5 by -3/2 = -1.5

(%o9)	[x(t)=((3*y(0)+x(0))*%e^((27*t)/2))/2+((x(0)-3*y(0))*%e^((9*t)/2))/2,y(t)=((3*y(0)+x(0))*%e^((27*t)/2))/6+((3*y(0)-x(0))*%e^((9*t)/2))/6]
  1.2 Solve the following system of ordinary differential equations
	x'=-x + y + 0.4*z
	y'=x - 0.1*y +1.4*z
	z'=0.4*x + 1.4*y + 0.2*z
 -->	kill(all)$
 -->	eq1:'diff(x(t),t)=-x(t) + y(t) + 0.4*z(t);
	eq2:'diff(y(t),t)=x(t) - 0.1*y(t) +1.4*z(t);
	eq3:'diff(z(t),t)=0.4*x(t) + 1.4*y(t) + 0.2*z(t);
(%o1)	'diff(x(t),t,1)=0.4*z(t)+y(t)-x(t)
(%o2)	'diff(y(t),t,1)=1.4*z(t)-0.1*y(t)+x(t)
(%o3)	'diff(z(t),t,1)=0.2*z(t)+1.4*y(t)+0.4*x(t)
  1.2.1 Method 1 - Coeficient matrix
 -->	A:matrix([-1,1,0.4],[1,-0.1,1.4],[0.4,1.4,0.2]);
(%o4)	matrix(
		[-1,	1,	0.4],
		[1,	-0.1,	1.4],
		[0.4,	1.4,	0.2]
	)
 -->	eigenvalues(A);
rat: replaced 0.3599999999999999 by 9/25 = 0.36

rat: replaced 0.4 by 2/5 = 0.4

rat: replaced 1.4 by 7/5 = 1.4

rat: replaced -0.4 by -2/5 = -0.4

rat: replaced -0.1 by -1/10 = -0.1

rat: replaced -1.959999999999999 by -49/25 = -1.96

rat: replaced -0.1 by -1/10 = -0.1

rat: replaced 0.2 by 1/5 = 0.2

(%o5)	[[-9/10,9/5,-9/5],[1,1,1]]
 -->	eigenvectors(A);
rat: replaced 0.3599999999999999 by 9/25 = 0.36

rat: replaced 0.4 by 2/5 = 0.4

rat: replaced 1.4 by 7/5 = 1.4

rat: replaced -0.4 by -2/5 = -0.4

rat: replaced -0.1 by -1/10 = -0.1

rat: replaced -1.959999999999999 by -49/25 = -1.96

rat: replaced -0.1 by -1/10 = -0.1

rat: replaced 0.2 by 1/5 = 0.2

(%o6)	[[[-9/10,9/5,-9/5],[1,1,1]],[[[1,1/2,-1]],[[1,2,2]],[[1,-1,1/2]]]]
 -->	soln:[x,y,z]=c1*[1,1/2,-1]*e^(-9/10*t) + c2*[1,2,2]*e^(9/5*t)+ c3*[1,-1,1/2]*e^(-9/5*t);
(%o7)	[x,y,z]=[c2*e^((9*t)/5)+c1/e^((9*t)/10)+c3/e^((9*t)/5),2*c2*e^((9*t)/5)+c1/(2*e^((9*t)/10))-c3/e^((9*t)/5),2*c2*e^((9*t)/5)-c1/e^((9*t)/10)+c3/(2*e^((9*t)/5))]
 -->	part(soln,1,1)=part(soln,2,1);
	part(soln,1,2)=part(soln,2,2);
	part(soln,1,3)=part(soln,2,3);
(%o8)	x=c2*e^((9*t)/5)+c1/e^((9*t)/10)+c3/e^((9*t)/5)
(%o9)	y=2*c2*e^((9*t)/5)+c1/(2*e^((9*t)/10))-c3/e^((9*t)/5)
(%o10)	z=2*c2*e^((9*t)/5)-c1/e^((9*t)/10)+c3/(2*e^((9*t)/5))
  1.2.2 Desolve Method
 -->	desolve([eq1,eq2,eq3],[x(t),y(t),z(t)]);
rat: replaced 0.4 by 2/5 = 0.4

rat: replaced 0.4 by 2/5 = 0.4

rat: replaced -0.1 by -1/10 = -0.1

rat: replaced 1.4 by 7/5 = 1.4

rat: replaced -0.1 by -1/10 = -0.1

rat: replaced 1.4 by 7/5 = 1.4

rat: replaced 0.4 by 2/5 = 0.4

rat: replaced 1.4 by 7/5 = 1.4

rat: replaced 0.2 by 1/5 = 0.2

rat: replaced 0.4 by 2/5 = 0.4

rat: replaced 1.4 by 7/5 = 1.4

rat: replaced 0.2 by 1/5 = 0.2

rat: replaced -0.4 by -2/5 = -0.4

rat: replaced 0.1 by 1/10 = 0.1

rat: replaced -1.4 by -7/5 = -1.4

rat: replaced -0.4 by -2/5 = -0.4

rat: replaced -1.4 by -7/5 = -1.4

rat: replaced -0.2 by -1/5 = -0.2

(%o11)	[x(t)=((10*z(0)+10*y(0)+5*x(0))*%e^((9*t)/5))/45-((40*z(0)-20*y(0)-40*x(0))*%e^(-(9*t)/10))/90+((10*z(0)-20*y(0)+20*x(0))*%e^(-(9*t)/5))/45,y(t)=((20*z(0)+20*y(0)+10*x(0))*%e^((9*t)/5))/45-
((20*z(0)-10*y(0)-20*x(0))*%e^(-(9*t)/10))/90-((10*z(0)-20*y(0)+20*x(0))*%e^(-(9*t)/5))/45,z(t)=((20*z(0)+20*y(0)+10*x(0))*%e^((9*t)/5))/45+((40*z(0)-20*y(0)-40*x(0))*%e^(-(9*t)/10))/90+
((5*z(0)-10*y(0)+10*x(0))*%e^(-(9*t)/5))/45]
  2 Case 2: Real and Equal Eigenvalues
  2.1 Solve the following system of ordinary differential equations
	x' = 8*x - y
	y' = x + 10*y
 -->	kill(all)$
 -->	eq1:'diff(x(t),t)=8*x(t) - y(t);
	eq2:'diff(y(t),t)= x(t) + 10*y(t);
(%o1)	'diff(x(t),t,1)=8*x(t)-y(t)
(%o2)	'diff(y(t),t,1)=10*y(t)+x(t)
 -->	A:matrix([8,-1],[1,10]);
(%o3)	matrix(
		[8,	-1],
		[1,	10]
	)
 -->	eigenvalues(A);
(%o4)	[[9],[2]]
 -->	/*Repeated eigenvalue = r = 9*/
	eigenvectors(A);
(%o5)	[[[9],[2]],[[[1,-1]]]]
 -->	/*We get only one eigenvector  [1,-1]*/
	/*If we get only a single eigenvector corresponding to the same eigenvalue 'r' then 
	the general solution is : 
	    c1*k*e^(rt) + c2*(k*t*e^(rt) + n*e^(rt))
	where n is obtained as : (A-rI)*n=k*/
	r:9;
	k1:[1,-1];
(%o6)	9

(%o7)	[1,-1]
 -->	desolve([eq1,eq2],[x(t),y(t)]);
(%o8)	[x(t)=-y(0)*t*%e^(9*t)-x(0)*t*%e^(9*t)+x(0)*%e^(9*t),y(t)=y(0)*t*%e^(9*t)+x(0)*t*%e^(9*t)+y(0)*%e^(9*t)]
  2.2 Solve the following system of ordinary differential equations
	x'=15.5x
	y'=15.5y
 -->	kill(all)$
 -->	eq1:'diff(x(t),t)=15.5*x(t);
	eq2:'diff(y(t),t)=15.5*y(t);
(%o1)	'diff(x(t),t,1)=15.5*x(t)
(%o2)	'diff(y(t),t,1)=15.5*y(t)
 -->	A:matrix([15.5,0],[0,15.5]);
(%o3)	matrix(
		[15.5,	0],
		[0,	15.5]
	)
 -->	eigenvalues(A);
	eigenvectors(A);
rat: replaced 15.5 by 31/2 = 15.5

(%o4)	[[31/2],[2]]

rat: replaced 15.5 by 31/2 = 15.5

(%o5)	[[[31/2],[2]],[[[1,0],[0,1]]]]
 -->	/*If we get two linearly independent eigenvectors 'k1', 'k2' corresponding to the same
	eigenvalue 'r' the general solution is : 
	    c1*k1*%e^(r*t) + c2*k2*%e^(r*t)*/
	r:3;
	k1:[1,0];
	k2:[0,1];
	soln:[x,y]=c1*k1*%e^(r*t) + c2*k2*%e^(r*t);
(%o6)	3

(%o7)	[1,0]

(%o8)	[0,1]

(%o9)	[x,y]=[c1*%e^(3*t),c2*%e^(3*t)]
 -->	part(soln,1,1)=part(soln,2,1);
	part(soln,1,2)=part(soln,2,2);
(%o10)	x=c1*%e^(3*t)
(%o11)	y=c2*%e^(3*t)
 -->	desolve([eq1,eq2],[x(t),y(t)]);
rat: replaced 15.5 by 31/2 = 15.5

rat: replaced 15.5 by 31/2 = 15.5

rat: replaced -15.5 by -31/2 = -15.5

rat: replaced -15.5 by -31/2 = -15.5

(%o12)	[x(t)=x(0)*%e^((31*t)/2),y(t)=y(0)*%e^((31*t)/2)]
  2.3 y'''' - 5*y'' + 4y = 10 with 
	y(0)=4; y'(0)=3; y''(0)=-9; y'''(0)=-2
 -->	/*using transformation 
	    x1=y
	    x2=x1'=y'
	    x3=x2'=y''
	    x4=x3'=y'''
	    x5=x4'=y''''
	    x1(0)=4
	    x2(0)=3
	    x3(0)=-9
	    x4(0)=-2*/
	eq1:'diff(x1(t),t)=x2(t);
	eq2:'diff(x2(t),t)=x3(t);
	eq3:'diff(x3(t),t)=x4(t);
	eq4:'diff(x4(t),t)= 5*x3(t) - 4*x1(t);
(%o13)	'diff(x1(t),t,1)=x2(t)
(%o14)	'diff(x2(t),t,1)=x3(t)
(%o15)	'diff(x3(t),t,1)=x4(t)
(%o16)	'diff(x4(t),t,1)=5*x3(t)-4*x1(t)
 -->	A:matrix([0,1,0,0],[0,0,1,0],[0,0,0,1],
	[-4,0,5,0]);
(%o17)	matrix(
		[0,	1,	0,	0],
		[0,	0,	1,	0],
		[0,	0,	0,	1],
		[-4,	0,	5,	0]
	)
 -->	eigenvalues(A);
	eigenvectors(A);
(%o18)	[[-2,2,-1,1],[1,1,1,1]]

(%o19)	[[[-2,2,-1,1],[1,1,1,1]],[[[1,-2,4,-8]],[[1,2,4,8]],[[1,-1,1,-1]],[[1,1,1,1]]]]
 -->	/*This is the case of real and distinct eigenvalues*/
	r1:-2;r2:2;r3:-1;r4:1;
	k1:[1,-2,4,-8];
	k2:[1,2,4,8];
	k3:[1,-1,1,-1];
	k4:[1,1,1,1];
	soln:[x1,x2,x3,x4]=c1*k1*e^(r1*t)+ 
	c2*k2*e^(r2*t) + c3*k3*e^(r3*t) + 
	c4*k4*e^(r4*t);
(%o20)	-2

(%o21)	2

(%o22)	-1

(%o23)	1

(%o24)	[1,-2,4,-8]

(%o25)	[1,2,4,8]

(%o26)	[1,-1,1,-1]

(%o27)	[1,1,1,1]

(%o28)	[x1,x2,x3,x4]=[c2*e^(2*t)+c4*e^t+c3/e^t+c1/e^(2*t),2*c2*e^(2*t)+c4*e^t-c3/e^t-(2*c1)/e^(2*t),4*c2*e^(2*t)+c4*e^t+c3/e^t+(4*c1)/e^(2*t),8*c2*e^(2*t)+c4*e^t-c3/e^t-(8*c1)/e^(2*t)]
 -->	e1:part(soln,1,1)=part(soln,2,1);
	e2:part(soln,1,2)=part(soln,2,2);
	e3:part(soln,1,3)=part(soln,2,3);
	e4:part(soln,1,4)=part(soln,2,4);
(%o29)	x1=c2*e^(2*t)+c4*e^t+c3/e^t+c1/e^(2*t)
(%o30)	x2=2*c2*e^(2*t)+c4*e^t-c3/e^t-(2*c1)/e^(2*t)
(%o31)	x3=4*c2*e^(2*t)+c4*e^t+c3/e^t+(4*c1)/e^(2*t)
(%o32)	x4=8*c2*e^(2*t)+c4*e^t-c3/e^t-(8*c1)/e^(2*t)
 -->	t1:subst([x1=4,t=0],e1);
(%o33)	4=c4+c3+c2+c1
 -->	t2:subst([x2=3,t=0],e2);
(%o34)	3=c4-c3+2*c2-2*c1
 -->	t3:subst([x3=-9,t=0],e3);
(%o35)	-9=c4+c3+4*c2+4*c1
 -->	t4:subst([x4=-2,t=0],e4);
(%o36)	-2=c4-c3+8*c2-8*c1
 -->	solve([t1,t2,t3,t4],[c1,c2,c3,c4]);
(%o37)	[[c1=-7/4,c2=-31/12,c3=11/6,c4=13/2]]
 -->	subst(
	[c1=-7/4,c2=-31/12,c3=11/6,c4=13/2],
	[e1,e2,e3,e4]);
(%o38)	[x1=-(31*e^(2*t))/12+(13*e^t)/2+11/(6*e^t)-7/(4*e^(2*t)),x2=-(31*e^(2*t))/6+(13*e^t)/2-11/(6*e^t)+7/(2*e^(2*t)),x3=-(31*e^(2*t))/3+(13*e^t)/2+11/(6*e^t)-7/e^(2*t),x4=-(62*e^(2*t))/3+(13*e^t)/2-11/(6*e^t)+14/e^(2*t)]
 -->	atvalue(x1(t),t=0,4);
	atvalue(x2(t),t=0,3);
	atvalue(x3(t),t=0,-9);
	atvalue(x4(t),t=0,-2);
	desolve([eq1,eq2,eq3,eq4],
	[x1(t),x2(t),x3(t),x4(t)]);
(%o39)	4

(%o40)	3

(%o41)	-9

(%o42)	-2

(%o43)	[x1(t)=-(31*%e^(2*t))/12+(13*%e^t)/2+(11*%e^(-t))/6-(7*%e^(-2*t))/4,x2(t)=-(31*%e^(2*t))/6+(13*%e^t)/2-(11*%e^(-t))/6+(7*%e^(-2*t))/2,x3(t)=-(31*%e^(2*t))/3+(13*%e^t)/2+(11*%e^(-t))/6-7*%e^(-2*t),x4(t)=-
(62*%e^(2*t))/3+(13*%e^t)/2-(11*%e^(-t))/6+14*%e^(-2*t)]
Practical 6
	Solution of Cauchy Problem of First Order Partial Differential Equations.
    Written By Anshul Verma (19/78065) for GE-III Practicals
	    B.Sc. (Hons.) Computer Science
  1 Solve the Cauchy problem 3ux-2uy=1 with u(x,0)=sin(x).
    The Characteristic eqn is: dx/3 = dy/(-2) = du/1. 
	    Solving two of these for two constants, we consider:
	        dy/dx=(-2)/3 and du/dx=1/3
 -->	eq1:'diff(y,x)=(-2)/3 ;
(%o44)	'diff(y,x,1)=-2/3
 -->	ode2(eq1,y,x);
(%o45)	y=%c-(2*x)/3
 -->	solve(y=c1-(2*x)/3,c1);
(%o46)	[c1=(3*y+2*x)/3]
 -->	eq2:'diff(u,x)=1/3;
(%o47)	'diff(u,x,1)=1/3
 -->	ode2(eq2,u,x);
(%o48)	u=x/3+%c
 -->	solve(u=x/3+c2,c2);
(%o49)	[c2=-(x-3*u)/3]
The general soln of the given PDE is given by c1=f(c2) or c2=f(c1) where f is an arbitrary function.
 -->	-(x-3*u)/3=f((3*y+2*x)/3);
(%o50)	(3*u-x)/3=f((3*y+2*x)/3)
 -->	solve((3*u-x)/3=f((3*y+2*x)/3),u);
(%o51)	[u=(3*f(y+(2*x)/3)+x)/3]
 -->	u(x,y):=(3*f(y+(2*x)/3)+x)/3;
(%o52)	u(x,y):=(3*f(y+(2*x)/3)+x)/3
 -->	u(x,0)=sin(x);
(%o53)	(x+3*f((2*x)/3))/3=sin(x)
 -->	solve(%,f(2*x/3));
(%o54)	[f((2*x)/3)=(3*sin(x)-x)/3]
 -->	f(x):=(3*sin(x)-x)/3;
(%o55)	f(x):=(3*sin(x)-x)/3
 -->	'u(x,y)=u(x,y);
(%o56)	u(x,y)=(3*sin(y+(2*x)/3)-y+x/3)/3
 -->	wxplot3d(u(x,y),[x,-10,10],[y,-2,2]);
(%t57)	 (Graphics) 
(%o57)	
  2 Solve the Cauchy problem ux+xuy=0 with u(0,y)=sin(y).
    The Characteristic eqn is: dx/1 = dy/x = du/0. 
	    Solving two of these for two constants, we consider:
	        dy/dx=x and du/dx=0
 -->	kill(all)$
 -->	eq1:'diff(y,x)=x;
(%o1)	'diff(y,x,1)=x
 -->	ode2(eq1,y,x);
(%o2)	y=x^2/2+%c
 -->	solve(y=x^2/2+c1,c1);
(%o3)	[c1=(2*y-x^2)/2]
 -->	eq2:'diff(u,x)=0;
(%o4)	'diff(u,x,1)=0
 -->	ode2(eq2,u,x);
(%o5)	u=%c
 -->	solve(u=c2,c2);
(%o6)	[c2=u]
The general soln of the given PDE is given by c1=f(c2) or c2=f(c1) where f is an arbitrary function.
 -->	u=f((2*y-x^2)/2);
(%o7)	u=f((2*y-x^2)/2)
 -->	u(x,y):=f((2*y-x^2)/2);
(%o8)	u(x,y):=f((2*y-x^2)/2)
 -->	u(0,y)=sin(y);
(%o9)	f(y)=sin(y)
 -->	f(y):=sin(y);
(%o10)	f(y):=sin(y)
 -->	'u(x,y)=u(x,y);
(%o11)	u(x,y)=sin((2*y-x^2)/2)
 -->	wxplot3d(u(x,y),[x,-1,1],[y,-5,3]);
(%t12)	 (Graphics) 
(%o12)	
  3 Solve the Cauchy problem x*ux+y*uy=x*exp(-u) ; u(x,x^2)=0.
    The Characteristic eqn is: dx/x = dy/(x+y) = du/u+1. 
	    Solving two of these for two constants, we consider:
	        dy/dx=y/x and du/dx=exp(-u), we get
 -->	kill(all);
(%o0)	done
 -->	eq3:'diff(y,x)=y/x;
(%o1)	'diff(y,x,1)=y/x
 -->	ode2(eq3,y,x);
(%o2)	y=%c*x
 -->	solve(y=c3*x,c3);
(%o3)	[c3=y/x]
 -->	eq4:'diff(u,x)=exp(-u);
(%o4)	'diff(u,x,1)=%e^(-u)
 -->	ode2(eq4,u,x);
(%o5)	%e^u=x+%c
 -->	solve(exp(u)=x+c4,c4);
(%o6)	[c4=%e^u-x]
The general soln is given by c4=g(c3) where g is an arbitrary function. 
 -->	exp(u)-x=g(y/x);
(%o7)	%e^u-x=g(y/x)
 -->	u(x,y):=log(x+g(y/x));
(%o8)	u(x,y):=log(x+g(y/x))
 -->	u(x,x^2)=0;
(%o9)	log(g(x)+x)=0
 -->	solve(%,g(x));
(%o10)	[g(x)=1-x]
 -->	g(x):=1-x;
(%o11)	g(x):=1-x
 -->	'u(x,y)=u(x,y);
(%o12)	u(x,y)=log(-y/x+x+1)
 -->	wxplot3d(u(x,y),[x,-2,6],[y,-20,20]);
(%t13)	 (Graphics) 
(%o13)	
  4 Solve the Cauchy problem x ux + y uy = 2xy, 
	with u = 2 on y = x^2.
    The Characteristic eqn is: dx/x = dy/y = du/x*y. 
	    Solving two of these for two constants, we consider:
	        dy/dx=y/x and du/dx=y
 -->	kill(all)$
 -->	eq1:'diff(y,x)=y/x ;
(%o1)	'diff(y,x,1)=y/x
 -->	ode2(eq1,y,x);
(%o2)	y=%c*x
 -->	solve(y=c1*x,c1);
(%o3)	[c1=y/x]
 -->	eq2:'diff(u,x)=y;
(%o4)	'diff(u,x,1)=y
 -->	ode2(eq2,u,x);
(%o5)	u=x*y+%c
 -->	solve(u=x*y+c2,c2);
(%o6)	[c2=u-x*y]
The general soln of the given PDE is given by c1=f(c2) or c2=f(c1) where f is an arbitrary function.
 -->	u-x*y=f(y/x);
(%o7)	u-x*y=f(y/x)
 -->	solve(u-x*y=f(y/x),u);
(%o8)	[u=f(y/x)+x*y]
 -->	u(x,y):=f(y/x)+x*y;
(%o9)	u(x,y):=f(y/x)+x*y
 -->	u(x,x^2)=2;
(%o10)	f(x)+x^3=2
 -->	f(x):=2-x^3;
(%o11)	f(x):=2-x^3
 -->	'u(x,y)=u(x,y);
(%o12)	u(x,y)=-y^3/x^3+x*y+2
 -->	wxplot3d(u(x,y),[x,-1,1],[y,-1,1]);
(%t13)	 (Graphics) 
(%o13)	
Practical 7
	Finding and plotting the Characteristics of a First Order Partial Differential Equations
    Written By Anshul Verma (19/78065) for GE-III Practicals
	    B.Sc. (Hons.) Computer Science
  1 (1+x^2)*u_x + u_y = u
    Characteristics: dx/(1+x^2) = dy/1 = du/u
	    The characterstics equations for given PDE will be,
	        eqn1: dy/dx = 1/(1+x^2)
	        eqn2: du/dx = u/(1+x^2)
We first consider eqn1: dy/dx = 1/(1+x^2)
 -->	eq1:'diff(y,x)=1/(1+x^2);
(%o14)	'diff(y,x,1)=1/(x^2+1)
 -->	ode2(eq1,y,x);
(%o15)	y=atan(x)+%c
 -->	solve(y=atan(x)+c1,y);
(%o16)	[y=atan(x)+c1]
 -->	psol:makelist(atan(x)+c1,c1,0,9);
(%o17)	[atan(x),atan(x)+1,atan(x)+2,atan(x)+3,atan(x)+4,atan(x)+5,atan(x)+6,atan(x)+7,atan(x)+8,atan(x)+9]
 -->	wxplot2d(psol,[x,-10,10]);
(%t18)	 (Graphics) 
(%o18)	
Now, consider eqn2: du/dx = u/(1+x^2)
 -->	eq2:'diff(u,x)=u/(1+x^2);
(%o19)	'diff(u,x,1)=u/(x^2+1)
 -->	ode2(eq2,u,x);
(%o20)	u=%c*%e^atan(x)
 -->	solve(u=c2*%e^atan(x),u);
(%o21)	[u=c2*%e^atan(x)]
 -->	psol2:makelist(c2*%e^atan(x),c2,-3,8);
(%o22)	[-3*%e^atan(x),-2*%e^atan(x),-%e^atan(x),0,%e^atan(x),2*%e^atan(x),3*%e^atan(x),4*%e^atan(x),5*%e^atan(x),6*%e^atan(x),7*%e^atan(x),8*%e^atan(x)]
 -->	wxplot3d(-3*%e^atan(x),[x,-10,10],[y,-10,10]);
(%t23)	 (Graphics) 
(%o23)	
  2 u_x + 2xy^2u_y = 0
    The characterstics equations for given PDE will be,
	    dx/1 = dy/(2*x*y^2) = du/0
	    eqn1: dy/dx = 2*x*y^2
	    eqn2: du/dx = 0
 -->	kill(all);
(%o0)	done
We first consider eqn1: dy/dx = 2*x*y^
 -->	eq1:'diff(y,x)=2*x*y^2;
(%o1)	'diff(y,x,1)=2*x*y^2
 -->	ode2(eq1,y,x);
(%o2)	-1/(2*y)=x^2/2+%c
 -->	solve(-1/(2*y)=x^2/2+c1,y);
(%o3)	[y=-1/(x^2+2*c1)]
 -->	psol:makelist(-1/(x^2+2*c1),c1,0,9);
(%o4)	[-1/x^2,-1/(x^2+2),-1/(x^2+4),-1/(x^2+6),-1/(x^2+8),-1/(x^2+10),-1/(x^2+12),-1/(x^2+14),-1/(x^2+16),-1/(x^2+18)]
 -->	wxplot2d(psol,[x,-10,10],[y,-5,1]);
plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

(%t5)	 (Graphics) 
(%o5)	
Now, consider eqn2: du/dx = 0
 -->	eq2:'diff(u,x)=0;
(%o6)	'diff(u,x,1)=0
 -->	ode2(eq2,u,x);
(%o7)	u=%c
 -->	solve(u=c2,u);
(%o8)	[u=c2]
 -->	psol2:makelist(c2,c2,-3,6);
(%o9)	[-3,-2,-1,0,1,2,3,4,5,6]
 -->	wxplot3d(-3,[x,-10,10],[y,-8,8]);
(%t10)	 (Graphics) 
(%o10)	
  3 x^2*ux+y^2*uy=(x+y)*u
Characteristic eqns are: dx/x^2 = dy/y^2 = du/(x+y)*u
	Consider eq1: dy/dx = y^2/x^2
 -->	eq1: 'diff(y,x)=y^2/x^2;
(%t11)	 (Graphics) 
(%o11)	

(%o12)	'diff(y,x,1)=y^2/x^2
 -->	ode2(eq1,y,x);
 -->	solve(-1/y=c1-1/x,y);
(%o13)	'diff(y,x,1)=y^2/x^2
(%o14)	-1/y=%c-1/x
 -->	psol:makelist(-x/(c1*x-1),c1,-2,1);
 -->	wxplot2d(psol,[x,-8,6],[y,-3,4]);
(%o15)	[y=-x/(c1*x-1)]

(%o16)	[-x/(-2*x-1),-x/(-x-1),x,-x/(x-1)]
Other Characteristic eqn is eqn2: dx-dy/(x^2-y^2)=du/(x+y)*u which simplifies to dx-dy/(x-y)=du/u. 
	Let t=x-y then dt/t=du/u
 -->	eq2:'diff(u,t)=u/t;
 -->	ode2(eq2,u,t);
plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

(%t17)	 (Graphics) 
(%o17)	

(%o18)	'diff(u,t,1)=u/t
 -->	subst(x-y,t,%);
(%o19)	u=%c*t
 -->	solve(u=c2*(x-y),u);
 -->	psol2:makelist(c2*x-c2*y,c2,-3,5);
(%o20)	u=%c*(x-y)
(%o21)	[u=c2*x-c2*y]
 -->	wxplot3d(3*y-3*x,[x,-2,3],[y,3,6]);
 -->	kill(all);
(%o22)	[3*y-3*x,2*y-2*x,y-x,0,x-y,2*x-2*y,3*x-3*y,4*x-4*y,5*x-5*y]
  4 y*u_x + x*u_y = u
The characterstics equations for given PDE will be,
	    dx/y = dy/x = du/u
	    or
	    du/u = (dx-dy)/(y-x)
	eq1: dy/dx = x/y;
	eqn2: du/u = (dx-dy)/(y-x)
 -->	eq1: 'diff(y,x)=x/y;
(%t23)	 (Graphics) 
(%o23)	
 -->	ode2(eq1,y,x);
(%o0)	done

(%o1)	'diff(y,x,1)=x/y
 -->	solve(y^2/2=x^2/2+c1,y);
 -->	psol1:makelist(-sqrt(x^2+2*c1),c1,-2,1);
(%o2)	y^2/2=x^2/2+%c

(%o3)	[y=-sqrt(x^2+2*c1),y=sqrt(x^2+2*c1)]
 -->	psol2:makelist(sqrt(x^2+2*c1),c1,-2,1);
(%o4)	[-sqrt(x^2-4),-sqrt(x^2-2),-abs(x),-sqrt(x^2+2)]
 -->	psol:append(psol1,psol2);
 -->	wxplot2d(psol,[x,-6,6],[y,-5,5]);
(%o5)	[sqrt(x^2-4),sqrt(x^2-2),abs(x),sqrt(x^2+2)]

(%o6)	[-sqrt(x^2-4),-sqrt(x^2-2),-abs(x),-sqrt(x^2+2),sqrt(x^2-4),sqrt(x^2-2),abs(x),sqrt(x^2+2)]
Other Characteristic eqn is eqn2: du/u = (dx-dy)/(y-x). 
	Let t=x-y then -dt/t=du/u
 -->	eq2:'diff(u,t)=-u/t;
 -->	ode2(eq2,u,t);
plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: expression evaluates to non-numeric value somewhere in plotting range.

plot2d: some values were clipped.

plot2d: some values were clipped.

plot2d: some values were clipped.

(%t7)	 (Graphics) 
(%o7)	

(%o8)	'diff(u,t,1)=-u/t
 -->	subst(x-y,t,%);
 -->	solve(u=c2/(x-y),u);
(%o9)	u=%c/t
(%o10)	u=%c/(x-y)
 -->	psol2:makelist(-c2/(y-x),c2,-3,5);
(%o1)	[3/(y-x),2/(y-x),1/(y-x),0,-1/(y-x),-2/(y-x),-3/(y-x),-4/(y-x),-5/(y-x)]
 -->	wxplot3d(3/(y-x),[x,-2,2],[y,3,6]);
(%t2)	 (Graphics) 
(%o2)	
Practical 8
	Plot the integral
	surfaces of first order partial
	differential equations with initial
	data.
    Written By Anshul Verma (19/78065)
	    B.Sc. (Hons.) Computer Science
  1 Find the Integral Surface of the eqn
	3*u_x-4*u_y=1, so that the surface passes
	through an initial curve represented parametrically
	by x(s,0)=2*s^2,y(s,0)=2*s & u(s,0)=0 
	where is s>0 is a parameter
Sol:
	The characterstic eqns are: dx/3 =dy/(-4) = du/1 =dt; 
	where t is another parameter.
	So, they reduce parametrically to:
	dx/dt=3 ; x(0)= 2*s^2
	dy/dt=(-4) ; y(0)=2*s
	du/dt=1 ; u(0)=0.
 -->	kill(all);
For dx/dt=3,
 -->	a:'diff(x,t)=3;
(%t13)	 (Graphics) 
(%o13)	

(%o0)	done
 -->	ode2(a,x,t);
(%o1)	'diff(x,t,1)=3
 -->	a1:solve(x=3*t+c1,x);
For dy/dt=(-4),
 -->	b:'diff(y,t)=-4;
(%o2)	x=3*t+%c

(%o3)	[x=3*t+c1]
 -->	ode2(b,y,t);
(%o4)	'diff(y,t,1)=-4
 -->	b1:solve(y=c2-4*t,y);
For du/dt=1,
 -->	d:'diff(u,t)=1;
(%o5)	y=%c-4*t

(%o6)	[y=c2-4*t]
 -->	ode2(d,u,t);
 -->	d1:solve(u=t+c3,u);
(%o7)	'diff(u,t,1)=1

(%o8)	u=t+%c
Since, x(0)= 2*s^2; y(0)=2*s; u(0)=0;
 -->	subst([t=0,x=2*s^2],a1);
 -->	subst([t=0,y=2*s],b1);
(%o9)	[u=t+c3]

(%o10)	[2*s^2=c1]
 -->	subst([t=0,u=0],d1);
 -->	'x = 3*t+2*s^2;
(%o11)	[2*s=c2]

(%o12)	[0=c3]
 -->	'y=2*s-4*t ;
 -->	'u = t;
(%o13)	x=3*t+2*s^2
(%o14)	y=2*s-4*t
 -->	load(draw)$
 -->	wxdraw3d(color=red,
	    parametric(2*s^2,2^s,0,s,-5,5),title="Initial curve");
(%o15)	u=t
 -->	wxdraw3d(color=blue,parametric_surface(3*t+2*s^2,2*s-4*t,t,
	        s,-50,50,
	        t,-100,100),title="Integral Surface");
 -->	wxdraw3d(
	    [parametric_surface(
	        3*t+2*s^2,2*s-4*t,t,
	        s,-50,50,t,-100,100),
	        color=red,parametric(2*s^2,2^s,0,s,-50,50)],
	    title="Integral surface with Initial curve");
(%t17)	 (Graphics) 
(%o17)	
  2 Find the Integral Surface of the eqn, 
	(1/2y)u_x + u_y = 2u^2,
	so that the surface passes through an initial curve represented parametrically by 
	x(s,0)=4*s, y(s,0)=s & u(s,0)=s^2, where s>0 is a parameter.
Sol: Characterstic equations are: dx/(1/2y) = dy/1 = du/2u^2 = dt, where t is another parameter.
	    So they reduce parametrically to:
	    a: dx/dt = 1/2y; x(0)=4*s
	    b: dy/dt = 1; y(0)=s
	    d: du/dt = 2u^2; u(0)=s^2
 -->	kill(all);
(%t18)	 (Graphics) 
(%o18)	
For b: dy/dt = 1; y(0)=s
 -->	b:'diff(y,t)= 1;
(%t19)	 (Graphics) 
(%o19)	

(%o0)	done
 -->	ode2(b,y,t);
(%o1)	'diff(y,t,1)=1
 -->	b1:solve(y=t+c2,y);
 -->	subst([t=0,y=s],b1);
(%o2)	y=t+%c
 -->	'y = t+s;
(%o3)	[y=t+c2]

(%o4)	[s=c2]
For a: dx/dt = 1/2y; x(0)=4*s
 -->	a:'diff(x,t)=1/(2*(t+c2));
(%o5)	y=t+s
 -->	ode2(a,x,t);
(%o6)	'diff(x,t,1)=1/(2*(t+c2))
 -->	a1:solve(x=log(2*t+2*c2)/2+c1,c1);
 -->	subst([t=0,x=4*s,c2=s],a1);
(%o7)	x=log(2*t+2*c2)/2+%c

(%o8)	[c1=(2*x-log(2*t+2*c2))/2]
 -->	'x=log(2*t+2*s)/2 + (8*s-log(2*s))/2;
For d: du/dt = 2u^2; u(0)=s^2
 -->	d:'diff(u,t)=2*u^2;
(%o9)	[c1=(8*s-log(2*s))/2]

(%o10)	x=log(2*t+2*s)/2+(8*s-log(2*s))/2
 -->	ode2(d,u,t);
 -->	d1: solve(-(1/(2*u))=t+c3, c3);
(%o11)	'diff(u,t,1)=2*u^2
(%o12)	-1/(2*u)=t+%c
 -->	subst([t=0,u=s^2],d1);
 -->	solve(-(1/(2*u))=t-1/(2*s^2),u);
(%o13)	[c3=-(2*t*u+1)/(2*u)]

(%o14)	[c3=-1/(2*s^2)]
 -->	'u = -(s^2)/(2*s^2*t-1);
Therefore,
	    x=log(2*t+2*s)/2+(8*s-log(2*s))/2
	    y=t+s
	    u=-s^2/(2*s^2*t-1)
 -->	wxdraw3d(color=magenta,parametric(4*s,s,s^2,s,2,5),title="Initial curve");
(%o15)	[u=-s^2/(2*s^2*t-1)]

(%o16)	u=-s^2/(2*s^2*t-1)
 -->	wxdraw3d(
	    color=blue,
	    parametric_surface(log(2*t+2*s)/2+(8*s-log(2*s))/2,
	        t+s,
	        -s^2/(2*s^2*t-1),
	        s,-50,50,
	        t,-100,100),title="Integral Surface");
 -->	wxdraw3d(
	    [parametric_surface(log(2*t+2*s)/2+(8*s-log(2*s))/2,
	            t+s, -s^2/(2*s^2*t-1),s,-50,50,t,-100,100),
	        color=magenta,parametric(4*s,s,s^2,s,-50,50)],
	    title="Integral surface with Initial curve");
(%t17)	 (Graphics) 
(%o17)	
  3 Find the integral surface  of eqn,   
	        3*U_x − 2*U_y + U = x 
	so, that the surface passes through an initial curve represented parametrically
	by x(s,0) = (1-3*s)/2 , y(s,0) = s & u(s,0) = 0, where s>0 is a parameter.
Solution : 
	Char Equations are,
	dx/3 = dy/-2 = du/1 = dt , where we are using t as a dummy variable.
	Char equations affter reducing parametrically to :
	dx/dt =  3  , x(s,0) = (1-3*s)/2
	dy/dt = -2  , y(s,0) = s
	du/dt =  1  , u(s,0) = 0
 -->	kill(all)$
(%t18)	 (Graphics) 
(%o18)	
 -->	a:'diff(x,t)=3;
	ode2(a,x,t);
	a1:solve(x=3*t+c1,x);
	subst([t=0,x=(1-3*s)/2],a1);
(%t19)	 (Graphics) 
(%o19)	

(%o1)	'diff(x,t,1)=3

(%o2)	x=3*t+%c

(%o3)	[x=3*t+c1]
 -->	b:'diff(y,t)=-2;
	ode2(b,y,t);
	b1:solve(y=-2*t+c2,y);
	subst([t=0,y=s],b1);
(%o4)	[(1-3*s)/2=c1]

(%o5)	'diff(y,t,1)=-2

(%o6)	y=%c-2*t
 -->	c:'diff(u,t)=1;
	ode2(c,u,t);
	d1:solve(u=t+c3,u);
	subst([t=0,u=0],d1);
(%o7)	[y=c2-2*t]

(%o8)	[s=c2]

(%o9)	'diff(u,t,1)=1

(%o10)	u=t+%c
 -->	'x =  3*t + (1-3*s)/2 ;
	'y = -2*t + s ;
	'u =  t;
(%o11)	[u=t+c3]

(%o12)	[0=c3]

(%o13)	x=3*t+(1-3*s)/2
(%o14)	y=s-2*t
 -->	load(draw)$
 -->	wxdraw3d(color=magenta,
	         parametric((1-3*s)/2,s,0,s,-100,100),
	         title="Initial curve");
	wxdraw3d(color=cyan,
	         parametric_surface(3*t+(1-3*s)/2,-2*t+s,t,
	            s,-100,100,t,-200,200),
	         title="Integral surface");
	wxdraw3d([color=cyan,
	          parametric_surface(3*t+(1-3*s)/2,-2*t+s,t,
	            s,-100,100,t,-200,200),
	          color=magenta,
	          parametric((1-3*s)/2,s,0,s,-100,100)],
	          title="Integral surface with Initial curve");
(%o15)	u=t

(%t17)	 (Graphics) 
(%o17)	
  4 Solve the Cauchy problem,
	x^2u_x + uu_y = 2u with Cauchy data: x(s,0)= x(0)=2*sin(s)/3,y(s,0)=s^2,u(s,0)=3s. 
	Also plot the integral surface
	passing through initial curve.
Sol: Characterstic equations are: dx/y^2 = dy/u = du/2u = dt, where t
	is another parameter.
	    So they reduce parametrically to:
	    a: dx/dt = x^2; x(0)=2*sin(s)/3
	    b: dy/dt = u; y(0)=s^2
	    d: du/dt = 2u; u(0)=3*s
 -->	kill(all);
(%t18)	 (Graphics) 
(%o18)	
For a: dx/dt = x^2; x(0)=2*sin(s)/3,
 -->	a:'diff(x,t)=x^2;
(%t19)	 (Graphics) 
(%o19)	
 -->	ode2(a,x,t);
(%o0)	done

(%o1)	'diff(x,t,1)=x^2
 -->	a1: solve(-1/x=t+c1, c1);
 -->	subst([t=0,x=2*sin(s)/3],a1);
(%o2)	-1/x=t+%c

(%o3)	[c1=-(t*x+1)/x]
 -->	solve(-1/x=t+-3/(2*sin(s)),x);
(%o4)	[c1=-3/(2*sin(s))]
 -->	'x=-(2*sin(s))/(2*sin(s)*t-3);
For d: du/dt = 2u; u(0)=3*s,
 -->	d:'diff(u,t)=2*u;
(%o5)	[x=-(2*sin(s))/(2*sin(s)*t-3)]

(%o6)	x=-(2*sin(s))/(2*sin(s)*t-3)
 -->	ode2(d,u,t);
 -->	d1: solve(u=c3*(e^(2*t)), c3);
(%o7)	'diff(u,t,1)=2*u

(%o8)	u=%c*%e^(2*t)
 -->	subst([t=0,u=3*s],d1);
 -->	solve(u=(3*s)*(e^(2*t)),u);
(%o9)	[c3=u/e^(2*t)]

(%o10)	[c3=3*s]
 -->	'u=3*e^(2*t)*s;
For b: dy/dt = u; y(0)=s^2,
 -->	b:'diff(y,t)= c3*(e^(2*t));
(%o11)	[u=3*e^(2*t)*s]

(%o12)	u=3*e^(2*t)*s
 -->	ode2(b,y,t);
 -->	b1: solve(y=(c3*e^(2*t))/(2*log(e))+c2, c2);
(%o13)	'diff(y,t,1)=c3*e^(2*t)
(%o14)	y=(c3*e^(2*t))/(2*log(e))+%c
 -->	subst([t=0,y=s^2,c3=3*s],b1);
 -->	solve(y=(3*s*e^(2*t))/(2*log(e))+(2*log(e)*s^2-3*s)/(2*log(e)),y);
(%o15)	[c2=(2*log(e)*y-c3*e^(2*t))/(2*log(e))]

(%o16)	[c2=(2*log(e)*s^2-3*s)/(2*log(e))]
 -->	'y=(2*log(e)*s^2+(3*e^(2*t)-3)*s)/(2*log(e));
Therefore,
	    x=-(2*sin(s))/(2*sin(s)*t-3),
	    y=(2*log(e)*s^2+(3*e^(2*t)-3)*s)/(2*log(e)),
	    u=3*e^(2*t)*s
 -->	load(draw)$
(%o17)	[y=(2*log(e)*s^2+(3*e^(2*t)-3)*s)/(2*log(e))]

(%o18)	y=(2*log(e)*s^2+(3*e^(2*t)-3)*s)/(2*log(e))
 -->	wxdraw3d(
	    color=red,
	    parametric((2*s)/3,s^2,3*s,s,1,1.5),
	    title="Initial curve");
 -->	wxdraw3d(
	    parametric_surface(
	        -(2*sin(s))/(2*sin(s)*t-3),
	            (2*log(%e)*s^2+(3*%e^(2*t)-3)*s)/(2*log(%e)),
	            3*%e^(2*t)*s,
	            s,1,2,t,-1,0),
	    title="Integral surface");
 -->	wxdraw3d(
	    [parametric_surface(
	            -(2*sin(s))/(2*sin(s)*t-3),
	            (2*log(%e)*s^2+(3*%e^(2*t)-3)*s)/(2*log(%e)),
	            3*%e^(2*t)*s,
	            s,1,2,t,-1,0),
	        color=red,
	        parametric((2*s)/3,s^2,3*s,s,0,1)],
	    title="Integral surface with Initial curve");
(%t20)	 (Graphics) 
(%o20)	

(%t21)	 (Graphics) 
(%o21)	

(%t22)	 (Graphics) 
(%o22)	